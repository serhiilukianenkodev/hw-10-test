{"mappings":"AAkBO,SAASA,EAAYC,GAC1B,OAAOC,MAAM,uCAAuCD,KAAME,MAAKC,IAC7D,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAMF,EAAIG,YACjC,OAAOH,EAAII,MAAM,G,CChBrB,MAAMC,EAAcC,SAASC,cAAc,aDHlCT,MAAM,uCAAeC,MAAKC,IAC/B,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAMF,EAAIG,YACjC,OAAOH,EAAII,MAAM,ICEPL,MAKd,SAAoBS,GAClB,MAAMC,EAAeD,EAClBE,KAAI,EAACb,GAAEA,EAAEc,KAAEA,KAAW,kBAAkBd,MAAOc,eAC/CC,KAAK,IAERC,EAASC,UAAYL,C,IAVQM,MAAMC,QAAQC,KAE7C,MAAMJ,EAAWP,SAASC,cAAc,iBACxCM,EAASK,iBAAiB,SAU1B,SAAkBC,IDVctB,ECWbsB,EAAIC,OAAOC,MDVrBvB,MACL,wDAAwDD,mFACxDE,MAAKC,IACL,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAMF,EAAIG,YACjC,OAAOH,EAAII,MAAM,KCShBL,MAAKuB,GAKV,SAAmBA,GACjBN,QAAQC,IAAIK,GACZ,MAAMX,EAAOW,EAAMX,KACbY,EAAcD,EAAMC,YACpBC,EAAOF,EAAMG,YAEnB7B,EAAY0B,EAAMI,oBACf3B,MAAKC,IACJ,MAAM2B,EAAS,wBACA3B,EAAI4B,aAAajB,8BAC1BA,oBACDY,mBACAC,QAELnB,EAAYS,UAAYa,CAAM,IAE/BZ,MAAMC,QAAQC,I,CArBAY,CAAUP,EAAM,GAAGd,OAAO,MACxCO,MAAMC,QAAQC,KDfZ,IAAyBpB,C","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["export function fetchBreeds() {\n  const BASE_URL = 'https://api.thecatapi.com/v1/breeds';\n  return fetch(`${BASE_URL}`).then(res => {\n    if (!res.ok) throw new Error(res.statusText);\n    return res.json();\n  });\n}\n\n// https://api.thecatapi.com/v1/images/search?breed_ids=идентификатор_породы\nexport function fetchCatByBreed(id) {\n  return fetch(\n    `https://api.thecatapi.com/v1/images/search?breed_ids=${id}&api_key=live_6LtOq60s5fIHrbRM9r9IrxeJXsqT0vsnfIjhAkCuuyVXXChXSV2blRkKHS5PpFki`\n  ).then(res => {\n    if (!res.ok) throw new Error(res.statusText);\n    return res.json();\n  });\n}\n\nexport function fetchCatImg(id) {\n  return fetch(`https://api.thecatapi.com/v1/images/${id}`).then(res => {\n    if (!res.ok) throw new Error(res.statusText);\n    return res.json();\n  });\n}\n","import { fetchBreeds, fetchCatByBreed, fetchCatImg } from './cat-api';\n// 'x-api-key'\n// 'live_6LtOq60s5fIHrbRM9r9IrxeJXsqT0vsnfIjhAkCuuyVXXChXSV2blRkKHS5PpFki'\n// 'api_key=live_6LtOq60s5fIHrbRM9r9IrxeJXsqT0vsnfIjhAkCuuyVXXChXSV2blRkKHS5PpFki'\n\nconst breedInfoEl = document.querySelector('.cat-info');\nfetchBreeds().then(showBreeds).catch(console.log);\n\nconst selectEl = document.querySelector('.breed-select');\nselectEl.addEventListener('input', onSelect);\n\nfunction showBreeds(breeds) {\n  const selectMarkup = breeds\n    .map(({ id, name }) => `<option value=\"${id}\">${name}</option>`)\n    .join('');\n\n  selectEl.innerHTML = selectMarkup;\n}\n\nfunction onSelect(evt) {\n  const searchId = evt.target.value;\n\n  fetchCatByBreed(searchId)\n    .then(breed => showBreed(breed[0].breeds[0]))\n    .catch(console.log);\n}\n\n// появляется изображение и развернутая информация о коте: название породы, описание и темперамент.\nfunction showBreed(breed) {\n  console.log(breed);\n  const name = breed.name;\n  const temperament = breed.temperament;\n  const desc = breed.description;\n\n  fetchCatImg(breed.reference_image_id)\n    .then(res => {\n      const markup = `\n         <img src=\"${res.url}\" alt=\"${name} \"width=\"400\">\n      <h2>${name}</h2>\n      <p>${temperament}</p>\n      <p>${desc}</p>`;\n\n      breedInfoEl.innerHTML = markup;\n    })\n    .catch(console.log);\n}\n"],"names":["$6b5f202d1456c0af$export$5dd63e6d922d20f0","id","fetch","then","res","ok","Error","statusText","json","$1f0dc3b9307be026$var$breedInfoEl","document","querySelector","breeds","selectMarkup","map","name","join","$1f0dc3b9307be026$var$selectEl","innerHTML","catch","console","log","addEventListener","evt","target","value","breed","temperament","desc","description","reference_image_id","markup","url","$1f0dc3b9307be026$var$showBreed"],"version":3,"file":"index.ee560023.js.map"}